<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc compact="yes"?>
<?rfc iprnotified="no" ?>
<?rfc sortrefs="yes"?>
<?rfc strict="yes"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>

<rfc category="info" docName="draft-saintandre-otr-v2-00" ipr="trust200902">

  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <front>
    <title abbrev="OTRv2">Off-the-Record Messaging Protocol, Version 2</title>
    <author initials="I." surname="Goldberg" fullname="Ian Goldberg">
      <organization>University of Waterloo</organization>
      <address>
        <postal>
          <street>200 University Ave W</street>
          <city>Waterloo</city>
          <region>ONT</region>
          <code>N2L 3G1</code>
          <country>Canada</country>
        </postal>
        <email>iang@cs.uwaterloo.ca</email>
      </address>
    </author>
    <author initials="P." surname="Saint-Andre" fullname="Peter Saint-Andre" role="editor">
      <organization>Cisco</organization>
      <address>
        <postal>
          <street>1899 Wyknoop Street, Suite 600</street>
          <city>Denver</city>
          <region>CO</region>
          <code>80202</code>
          <country>USA</country>
        </postal>
        <phone>+1-303-308-3282</phone>
        <email>psaintan@cisco.com</email>
      </address>
    </author>
    <date day="28" month="June" year="2011"/>
    <abstract>
      <t>This document describes version 2 of the Off-the-Record Messaging protocol ("OTR").  The protocol is used for end-to-end encryption of messages exchanged via common instant messaging technologies.  OTR assumes a network model that provides in-order delivery of messages, but also assumes that some messages might not be delivered at all (for example, if the intended recipient disconnects).  OTR is designed to protect the confidentiality of messages against an active attacker, but it not designed to protect against some other attacks (e.g., Denial of Service).</t>
    </abstract>
  </front>

  <middle>

    <section title="Introduction" anchor='intro'>
      <t>This document describes version 2 of the Off-the-Record Messaging protocol ("OTR").  The protocol is used for end-to-end encryption of messages exchanged via common instant messaging technologies.  OTR assumes a network model that provides in-order delivery of messages, but also assumes that some messages might not be delivered at all (for example, if the intended recipient disconnects).  OTR is designed to protect the confidentiality of messages against an active attacker, but it not designed to protect against some other attacks (e.g., Denial of Service).</t>
      <t>In essence, the protocol proceeds as follows:</t>
      <t>
        <list style='numbers'>
          <t>Alice signals to Bob that she would like to use OTR to communicate (using an "OTR Query Message") or that she is willing to use OTR to communicate (using a whitespace-tagged plaintext message).  Both mechanisms convey the version(s) of OTR that Alice supports.</t>
          <t>Bob initiates an authenticated key exchange (AKE) with Alice.  (Version 2 of OTR uses a variant of the SIGMA protocol as its AKE.)</t>
          <t>Alice and Bob exchange Data Messages in order to send information to each other.</t>
        </list>
      </t>
      <t>Details are provided under <xref target='overview'/> and <xref target='protocol'/>.</t>
    </section>

    <section title="Terminology" anchor="terms">
      <t>The character ^ denotes exponentiation.</t>
      <t>Certain security-related terms are to be understood in the sense defined in <xref target="RFC4949"/>; such terms include, but are not limited to, "assurance", "attack", "authentication", "authorization", "certificate", "certification authority", "certification path", "confidentiality", "credential", "downgrade", "encryption", "hash value", "identity", "integrity", "signature", "self-signed certificate", "sign", "spoof", "tamper", "trust", "trust anchor", "validate", and "verify".</t>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target='RFC2119'/>.</t>
    </section>

    <section title="Overview" anchor="overview">

      <t>This section provides a high-level overview of the protocol.</t>

      <section title="Requesting an OTR Conversation" anchor="overview-request">
        <t>There are two ways Alice can inform Bob that she is willing to use the OTR protocol to speak with him: by sending him the OTR Query Message, or by including a special "tag" consisting of whitespace characters in one of her messages to him.  Each method also includes a way for Alice to communicate to Bob which versions of the OTR protocol she is willing to speak with him.</t>
        <t>The semantics of the OTR Query Message are that Alice is requesting that Bob start an OTR conversation with her (if, of course, he is willing and able to do so).  On the other hand, the semantics of the whitespace tag are that Alice is merely indicating to Bob that she is willing and able to have an OTR conversation with him.  If Bob has a policy of "only use OTR when it's explicitly requested", for example, then he would start an OTR conversation upon receiving an OTR Query Message, but would not upon receiving the whitespace tag.</t>
      </section>

      <section title="Authenticated Key Exchange" anchor="overview-ake">
        <t>This section outlines the version of the SIGMA protocol used as the AKE.  All exponentiations are done modulo a particular 1536-bit prime, and g is a generator of that group, as indicated in the detailed description below.  Alice and Bob's long-term authentication public keys are pubA and pubB, respectively.</t>
        <t>The general idea is that Alice and Bob do an unauthenticated Diffie-Hellman (D-H) key exchange to set up an encrypted channel, and then do mutual authentication inside that channel.</t>
        <t>When Bob initiates the AKE with Alice, the process is as follows.</t>
        <t>
          <list style='numbers'>
            <t>Bob does the following:<vspace blankLines='1'/>
              <list style='numbers'>
                <t>Picks a random value r (128 bits)</t>
                <t>Picks a random value x (at least 320 bits)</t>
                <t>Sends Alice AESr(g^x), HASH(g^x)</t>
              </list><vspace blankLines='1'/>
            </t>
            <t>Alice does the following:<vspace blankLines='1'/>
              <list style='numbers'>
                <t>Picks a random value y (at least 320 bits)</t>
                <t>Sends Bob g^y</t>
              </list><vspace blankLines='1'/>
            </t>
            <t>Bob does the following:<vspace blankLines='1'/>
              <list style='numbers'>
                <t>Verifies that Alice's g^y is a legal value (2 &gt;= g^y &gt;= modulus-2)</t>
                <t>Computes s = (g^y)^x</t>
                <t>Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways</t>
                <t>Picks keyidB, a serial number for his D-H key g^x</t>
                <t>Computes MB = MACm1(g^x, g^y, pubB, keyidB)</t>
                <t>Computes XB = pubB, keyidB, sigB(MB)</t>
                <t>Sends Alice r, AESc(XB), MACm2(AESc(XB))</t>
              </list><vspace blankLines='1'/>
            </t>
            <t>Alice does the following:<vspace blankLines='1'/>
              <list style='numbers'>
                <t>Uses r to decrypt the value of gx sent earlier</t>
                <t>Verifies that HASH(g^x) matches the value sent earlier</t>
                <t>Verifies that Bob's g^x is a legal value (2 &gt;= g^x &gt;= modulus-2)</t>
                <t>Computes s = (g^x)^y (note that this will be the same as the value of s Bob calculated)</t>
                <t>Computes two AES keys c, c' and four MAC keys m1, m1', m2, m2' by hashing s in various ways (the same as Bob)</t>
                <t>Uses m2 to verify MACm2(AESc(XB))</t>
                <t>Uses c to decrypt AESc(XB) to obtain XB = pubB, keyidB, sigB(MB)</t>
                <t>Computes MB = MACm1(g^x, g^y, pubB, keyidB)</t>
                <t>Uses pubB to verify sigB(MB)</t>
                <t>Picks keyidA, a serial number for her D-H key gy</t>
                <t>Computes MA = MACm1'(gy, gx, pubA, keyidA)</t>
                <t>Computes XA = pubA, keyidA, sigA(MA)</t>
                <t>Sends Bob AESc'(XA), MACm2'(AESc'(XA))</t>
              </list><vspace blankLines='1'/>
            </t>
            <t>Bob does the following:<vspace blankLines='1'/>
              <list style='numbers'>
                <t>Uses m2' to verify MACm2'(AESc'(XA))</t>
                <t>Uses c' to decrypt AESc'(XA) to obtain XA = pubA, keyidA, sigA(MA)</t>
                <t>Computes MA = MACm1'(g^y, g^x, pubA, keyidA)</t>
                <t>Uses pubA to verify sigA(MA)</t>
              </list>
            </t>
          </list>
        </t>
        <t>If all of the verifications succeeded, Alice and Bob now know each other's Diffie-Hellman public keys, and share the value s. Alice is assured that s is known by someone with access to the private key corresponding to pubB, and similarly for Bob.</t>
      </section>

      <section title="Exchanging Data" anchor="overview-exchange">
      <t>To follow.</t>
      </section>

    </section>

    <section title="Protocol Description" anchor="protocol">
      <t>To follow.</t>
    </section>

    <section title="Security Considerations" anchor="security">
      <t>To follow.</t>
    </section>

  </middle>

  <back>

    <references title="Normative References">

<reference anchor="RFC2119">
<front>
<title abbrev='RFC Key Words'>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='Scott Bradner'>
<organization>Harvard University</organization>
<address>
<postal>
<street>1350 Mass.  Ave.</street>
<street>Cambridge</street>
<street>MA 02138</street></postal>
<phone>- +1 617 495 3864</phone>
<email>sob@harvard.edu</email></address></author>
<date month='March' year='1997' />
<area>General</area>
<keyword>keyword</keyword>
<abstract>
<t>
   In many standards track documents several words are used to signify
   the requirements in the specification.  These words are often
   capitalized.  This document defines these words as they should be
   interpreted in IETF documents.  Authors who follow these guidelines
   should incorporate this phrase near the beginning of their document:

<list>
<t>
      The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL
      NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,  &quot;MAY&quot;, and
      &quot;OPTIONAL&quot; in this document are to be interpreted as described in
      RFC 2119.
</t></list></t>
<t>
   Note that the force of these words is modified by the requirement
   level of the document in which they are used.
</t></abstract></front>
<seriesInfo name='BCP' value='14' />
<seriesInfo name='RFC' value='2119' />
<format type='TXT' octets='4723' target='ftp://ftp.isi.edu/in-notes/rfc2119.txt' />
<format type='HTML' octets='14486' target='http://xml.resource.org/public/rfc/html/rfc2119.html' />
<format type='XML' octets='5661' target='http://xml.resource.org/public/rfc/xml/rfc2119.xml' />
</reference>


    </references>

    <references title="Informative References">

<reference anchor='RFC4949'>
<front>
<title>Internet Security Glossary, Version 2</title>
<author initials='R.' surname='Shirey' fullname='R. Shirey'>
<organization /></author>
<date year='2007' month='August' />
<abstract>
<t>This Glossary provides definitions, abbreviations, and explanations of terminology for information system security.  The 334 pages of entries offer recommendations to improve the comprehensibility of written material that is generated in the Internet Standards Process (RFC 2026).  The recommendations follow the principles that such writing should (a) use the same term or definition whenever the same concept is mentioned; (b) use terms in their plainest, dictionary sense; (c) use terms that are already well-established in open publications; and (d) avoid terms that either favor a particular vendor or favor a particular technology or mechanism over other, competing techniques that already exist or could be developed.  This memo provides information for the Internet community.</t></abstract></front>
<seriesInfo name='RFC' value='4949' />
<format type='TXT' octets='867626' target='http://www.rfc-editor.org/rfc/rfc4949.txt' />
</reference>

    </references>

  </back>

</rfc>
